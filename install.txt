# Installation Instructions for Kinefly.
# --------------------------------------------
# You need ROS, a camera to supply a ROS image stream, and Kinefly.  If you want to control voltages, then you'll need the PhidgetsAnalog hardware w/ Phidgets API.  If you want to control LED panels, then you'll need panels, see below.  There might be more stuff, but that's the basic setup.


# Install ROS Hydro on Ubuntu.
# Go to the ros.org website, and follow the installation instructions (hydro works well); OR if you're putting Hydro onto Ubuntu Precise, then copy & paste these commands:
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
sudo apt-get update
sudo apt-get install -y ros-hydro-desktop-full
sudo rosdep init
rosdep update
echo "source /opt/ros/hydro/setup.bash" >> ~/.bashrc
source ~/.bashrc
sudo apt-get install -y python-rosinstall
sudo apt-get install -y ros-hydro-cmake-modules


# Get a few additional pieces.
sudo apt-get install -y python-setuptools
sudo apt-get install -y python-numpy
sudo apt-get install -y python-scipy
sudo apt-get install -y libdc1394-22-dev
sudo apt-get install -y intltool
sudo apt-get install -y gobject-introspection


# Get Aravis camera library.
# Download the latest release from https://wiki.gnome.org/Aravis, 
# for example:  http://ftp.acc.umu.se/pub/GNOME/sources/aravis/0.3/aravis-0.3.1.tar.xz 
tar -xzf aravis-0.3.1.tar.xz   # To extract the files.
cd aravis-0.3.1
./configure
make && sudo make install


# Run the following commands (adjust them first if necessary).
mkdir -p ~/catkin/src
mkdir ~/src.git
cd ~/src.git
echo "source ~/catkin/devel/setup.bash" >> ~/.bashrc
echo "export ROS_PACKAGE_PATH=~/src.git:~/src.hg:~/catkin:$ROS_PACKAGE_PATH" >> ~/.bashrc    # (Assuming your ROS projects are in these two directories).


# Reboot the computer.
# sudo reboot


# Get & make camera_aravis.
cd ~/catkin/src
git clone http://github.com/ssafarik/camera_aravis
cd ~/catkin && catkin_make


# Verify that your camera hardware is configured properly, i.e. ethernet ports & static ip's & dhcp, or firewire stuff.


# Get & make both "libphidget" and "PhidgetsPython"
# Download & extract the file http://www.phidgets.com/downloads/libraries/libphidget.tar.gz
cd libphidget
./configure 
make && sudo make install 
# Download & extract the file http://www.phidgets.com/downloads/libraries/PhidgetsPython.zip
cd PhidgetsPython
sudo python setup.py install


# Get the LED Panels ROS node.
cd ~/src.git
git clone https://github.com/ssafarik/ledpanels


# Get phidgets ROS node.
cd ~/src.git
git clone https://github.com/ssafarik/phidgets


# Get & make the Kinefly software.
git clone https://github.com/ssafarik/Kinefly
sudo cp ~/src.git/Kinefly/udev/99-phidgets.rules /etc/udev/rules.d
rosmake Kinefly


# Think of a name for your rig (e.g. yourrigname), and tell Kinefly about it.
# See the Kinefly/launch directory for examples, and you can copy one of those
# directories. 
cd Kinefly/launch
ls
cp -R thadsrig yourrigname
echo "export RIG=yourrigname" >> ~/.bashrc
. ~/.bashrc


# Edit the new files as per your needs (ethernet or firewire camera, camera exposure, tracking parameters, etc). 
cd yourrigname
gedit source_camera.launch
gedit params_camera.launch
gedit params_kinefly.launch
...etc...



# You're done!
# Assuming that you got here successfully, then you 
# should be able to run Kinefly, for example:
roslaunch Kinefly main.launch  





